{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWitchHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","accPhoto","photos","large","src","noAccPhoto","lookingForAJobDescription","fullName","contactsBlock","contacts","facebook","vk","instagram","Preloader","Post","p","item","message","likesCount","length","maxLengthCreator","MyPosts","React","memo","postsElements","posts","reverse","map","id","postsBlock","AddNewPostForm","onSubmit","values","addPost","newPostText","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","reduxForm","form","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.e58a5514.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"contactsBlock\":\"ProfileInfo_contactsBlock__1_BqO\",\"accPhoto\":\"ProfileInfo_accPhoto__1ZZSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || 'Click two times on me'}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport noAccPhoto from '../../../assets/images/account.png'\nimport ProfileStatusWithHooks from \"./ProfileStatusWitchHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <div className={s.accPhoto}>\n                    {profile.photos.large ? <img src={profile.photos.large}/> : <img src={noAccPhoto}/>}\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n                </div>\n                <div>\n                    {profile.lookingForAJobDescription}\n                </div>\n                <div>\n                    {profile.fullName}\n                </div>\n                <div className={s.contactsBlock}>\n                    Социальные сети\n                    <div>\n                        {profile.contacts.facebook}\n                    </div>\n                    <div>\n                        {profile.contacts.vk}\n                    </div>\n                    <div>\n                        {profile.contacts.instagram}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport p from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={p.item}>\n            <img src={'https://i.stack.imgur.com/BRryU.jpg'}/>\n            {props.message}\n            <div>\n                <span>like</span> {props.likesCount}\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport Post from \"./Post/Post\";\nimport s from './MyPosts.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validator/valid\";\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\n\nconst length = maxLengthCreator(10)\n\nconst MyPosts = React.memo(props => {\n    let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>);\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My Posts</h3>\n            <div>\n                <AddNewPostForm onSubmit={onAddPost}/>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    );\n})\n\nfunction AddNewPostForm(props) {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name={'newPostText'} placeholder={'Enter your post'}\n                       validate={[required, length]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\n\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return ({\n        newPostText: state.profilePage.newPostText,\n        posts: state.profilePage.posts\n    })\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    })\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {getStatus, updateStatus, getProfile} from \"../../redux/profile-reducer\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId) {\n            userId = this.props.authorizedUserId\n        }\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\n            </div>\n        )\n\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\n    withRouter\n)(ProfileContainer)\n"],"sourceRoot":""}
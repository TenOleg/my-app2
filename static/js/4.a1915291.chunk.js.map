{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","length","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","React","memo","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","reverse","m","dialogItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sHCclMC,EAXI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCDvBC,EANC,SAACT,GACb,OACI,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,iCCApCC,EAASC,YAAiB,IAgBjBC,cAAU,CAACC,KAAM,wBAAjBD,EAdQ,SAACb,GAEpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAM,iBAAkBY,YAAa,qBAAsBC,SAAU,CAACC,IAAUX,OAEhH,8BACI,kDCeDY,EAxBCC,IAAMC,MAAK,SAAAzB,GACvB,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBN,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAE1E8B,EAAmB,YAAIN,EAAMO,UAAUC,UAAUJ,KAAI,SAAAK,GAAC,OAAI,cAAC,EAAD,CAASzB,QAASyB,EAAEzB,SAAcyB,EAAEjC,OAMlG,OACI,sBAAKC,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAEgC,YAAlB,SACKR,IAEL,sBAAKzB,UAAWC,IAAE6B,SAAlB,UACI,8BAAMD,IACN,cAAC,EAAD,CAAgBjB,SAXR,SAACsB,GACjBrC,EAAMsC,YAAYD,EAAOE,4B,iBCOlBC,sBACXC,aAfoB,SAACf,GACrB,MAAQ,CACJC,YAAaD,EAAMC,gBAIA,SAACe,GACxB,MAAQ,CACJJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,SAOpCK,IAFWJ,CAGbjB","file":"static/js/4.a1915291.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n\n    let path = '/dialogs/' + props.id;\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    );\n}\n\nexport default Message;","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\nimport {maxLengthCreator, required} from \"../../../utils/validator/valid\";\n\nconst length = maxLengthCreator(20)\n\nconst AddMessageForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name={'newMessageBody'} placeholder={'Enter your message'} validate={[required, length]} />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\nconst Dialogs = React.memo(props => {\n    let state = props.dialogsPage\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n\n    let messagesElements = [...state.messages].reverse().map(m => <Message message={m.message} key={m.id}/>);\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <AddMessageForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    );\n})\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return ({\n        dialogsPage: state.dialogsPage\n    })\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n"],"sourceRoot":""}